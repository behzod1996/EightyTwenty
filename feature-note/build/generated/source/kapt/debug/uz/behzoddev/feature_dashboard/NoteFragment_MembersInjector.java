// Generated by Dagger (https://dagger.dev).
package uz.behzoddev.feature_dashboard;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NoteFragment_MembersInjector implements MembersInjector<NoteFragment> {
  private final Provider<NoteNavigator> navigatorProvider;

  public NoteFragment_MembersInjector(Provider<NoteNavigator> navigatorProvider) {
    this.navigatorProvider = navigatorProvider;
  }

  public static MembersInjector<NoteFragment> create(Provider<NoteNavigator> navigatorProvider) {
    return new NoteFragment_MembersInjector(navigatorProvider);
  }

  @Override
  public void injectMembers(NoteFragment instance) {
    injectNavigator(instance, navigatorProvider.get());
  }

  @InjectedFieldSignature("uz.behzoddev.feature_dashboard.NoteFragment.navigator")
  public static void injectNavigator(NoteFragment instance, NoteNavigator navigator) {
    instance.navigator = navigator;
  }
}
